{"version":3,"sources":["geometry/index.js","physics/constants.js","physics/movement.js","physics/collision.js","physics/entity.js","physics/index.js","models/block.js","models/model.js","models/brick.js","models/door.js","models/flag.js","models/ground.js","models/pipe.js","models/random.js","models/index.js","worlds/index.js","world.js","player.js","game.js","index.js"],"names":["SIDES","TOP","RIGHT","BOTTOM","LEFT","AXES","HORIZONTAL","VERTICAL","GRAVITY","STICKY_THRESHOLD","move","entity","x","vx","y","vy","accelerate","ax","ay","moveEntities","entities","forEach","stopIfLowVelocity","axis","v","Math","abs","colliding","a","b","collidingX","right","left","collidingY","bottom","top","detectCollisions","dynamicEntities","staticEntities","map","dynamicEntity","staticEntity","touchingTheGround","filter","collision","undefined","flat","resolveCollisions","collisions","length","side","calculateCollisionSide","width","height","dx","midX","halfWidth","dy","midY","absDx","Entity","options","StaticEntity","DynamicEntity","Block","game","canvas","context","scrollX","strokeRect","Model","sprite","Image","src","spriteImage","inViewport","drawImage","Brick","Door","fillStyle","fillRect","Flag","world","unitLength","Ground","Pipe","Random","firstWorld","background","squares","columnWithGround","columnWithPlatform","World","groundHeight","blocks","column","columnIndex","block","rowIndex","push","createWorld","restore","draw","Player","sprites","stationary","stationaryImage","jumping","jumpingImage","direction","speed","Game","debug","getContext","floor","player","string","index","fillText","window","innerWidth","innerHeight","init","addEventListeners","animate","addEventListener","event","key","startMoving","code","jump","console","log","stopMoving","save","beginPath","requestAnimationFrame","update","handlePhysics","resetCanvas","scrollCanvas","main","document","querySelector"],"mappings":"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","file":"src.42f1efb9.js","sourceRoot":"../src","sourcesContent":["export const SIDES = {\n  TOP: 'TOP',\n  RIGHT: 'RIGHT',\n  BOTTOM: 'BOTTOM',\n  LEFT: 'LEFT'\n}\n\nexport const AXES = {\n  HORIZONTAL: 'HORIZONTAL',\n  VERTICAL: 'VERTICAL'\n}","export const GRAVITY = 0.5\nexport const STICKY_THRESHOLD = 0.004","import { STICKY_THRESHOLD } from './constants'\nimport { AXES } from '../geometry'\n\nconst move = entity => {\n  entity.x += entity.vx\n  entity.y += entity.vy\n}\n\nconst accelerate = entity => {\n  entity.vx += entity.ax\n  entity.vy += entity.ay\n}\n\nexport const moveEntities = entities => {\n  entities.forEach(entity => {\n    accelerate(entity)\n    move(entity)\n  })\n}\n\nexport const stopIfLowVelocity = (entity, axis) => {\n  let v\n  if (axis === AXES.VERTICAL) { v = entity.vy }\n  if (axis === AXES.HORIZONTAL) { v = entity.vx }\n  // if (v === undefined) {\n  //   throw new Error('Invalid axis provided.')\n  // }\n  if (Math.abs(v) < STICKY_THRESHOLD) {\n    v = 0\n  }\n}\n\n","import { SIDES, AXES } from '../geometry'\nimport { stopIfLowVelocity } from './movement'\n\nexport const colliding = (a, b) => {\n  const collidingX = a.right >= b.left && a.left <= b.right\n  const collidingY = a.bottom >= b.top && a.top <= b.bottom\n  return collidingX && collidingY\n}\n\nexport const detectCollisions = (dynamicEntities, staticEntities) =>\n  dynamicEntities.map(dynamicEntity =>\n    staticEntities.map(staticEntity => {\n      dynamicEntity.touchingTheGround = false\n      if (colliding(dynamicEntity, staticEntity)) {\n        return {\n          a: dynamicEntity,\n          b: staticEntity\n        }\n      }\n    }).filter(collision => collision !== undefined)\n  ).flat()\n\nexport const resolveCollisions = collisions => {\n  if (!collisions.length) return\n  return collisions.map(collision => {\n    const side = calculateCollisionSide(collision)\n    const { a, b } = collision\n    const RESTITUTION = 0\n\n    if (side === SIDES.TOP) {\n      a.y = b.bottom\n      a.vy = -a.vy * RESTITUTION\n      stopIfLowVelocity(AXES.VERTICAL)\n    }\n    if (side === SIDES.RIGHT) {\n      a.x = b.left - a.width\n      a.vx = -a.vx * RESTITUTION\n      stopIfLowVelocity(AXES.HORIZONTAL)\n    }\n    if (side === SIDES.BOTTOM) {\n      a.y = b.top - a.height\n      a.vy = -a.vy * RESTITUTION\n      stopIfLowVelocity(AXES.VERTICAL)\n      a.touchingTheGround = true\n    }\n    if (side === SIDES.LEFT) {\n      a.x = b.right\n      a.vx = -a.vx * RESTITUTION\n      stopIfLowVelocity(AXES.HORIZONTAL)\n    }\n  })\n}\n\nconst calculateCollisionSide = collision => {\n  const { a, b } = collision\n  const dx = (b.midX - a.midX) / b.halfWidth\n  const dy = (b.midY - a.midY) / b.halfWidth\n\n  const absDx = Math.abs(dx)\n  const absDy = Math.abs(dy)\n\n  // If the object is approaching from the sides\n  if (absDx > absDy) {\n    // If the player is approaching from the left\n    if (dx > 0) {\n      return SIDES.RIGHT\n      // If the player is approaching from the right\n    } else {\n      return SIDES.LEFT\n    }\n    // If this collision is coming from the top or bottom more\n  } else {\n    // If the player is approaching from above\n    if (dy > 0) {\n      return SIDES.BOTTOM\n      // If the player is approaching from below\n    } else {\n      return SIDES.TOP\n    }\n  }\n}","import { GRAVITY } from './constants'\n\nclass Entity {\n  constructor(options) {\n    const { x, y, width, height } = options\n    this.x = x\n    this.y = y\n    this.width = width\n    this.height = height\n  }\n\n  get top() {\n    return this.y\n  }\n\n  get right() {\n    return this.x + this.width\n  }\n\n  get bottom() {\n    return this.y + this.height\n  }\n\n  get left() {\n    return this.x\n  }\n\n  get midX() {\n    return (this.left + this.right) / 2\n  }\n\n  get midY() {\n    return (this.top + this.bottom) / 2\n  }\n\n  get halfWidth() {\n    return this.width / 2\n  }\n\n  get halfHeight() {\n    return this.height / 2\n  }\n}\n\nexport class StaticEntity extends Entity {\n  constructor(options) {\n    super(options)\n  }\n}\n\nexport class DynamicEntity extends Entity {\n  constructor(options) {\n    super(options)\n    const { vx, vy, ax, ay } = options\n    this.vx = vx\n    this.vy = vy\n    this.ax = ax\n    this.ay = ay || GRAVITY\n  }\n}\n","export { detectCollisions, resolveCollisions } from './collision'\nexport { DynamicEntity, StaticEntity } from './entity'\nexport { moveEntities } from './movement'\n","import { StaticEntity } from '../physics'\n\nexport class Block extends StaticEntity {\n  constructor(game, options) {\n    const { canvas, context } = game\n    super(options)\n    this.canvas = canvas\n    this.context = context\n  }\n\n  draw(scrollX) {\n    this.context.strokeRect(scrollX + this.x, this.y, this.width, this.height)\n  }\n}","import { StaticEntity } from '../physics'\nimport spriteImage from '../img/ground.png'\n\nexport class Model extends StaticEntity {\n  constructor(game, options) {\n    const { context, canvas } = game\n    super(options)\n    this.canvas = canvas\n    this.context = context\n    const sprite = new Image()\n    sprite.src = spriteImage\n    this.sprite = sprite\n  }\n\n  inViewport(scrollX) {\n    return this.x >= scrollX && this.x < this.canvas.width - scrollX\n  }\n\n  draw(scrollX) {\n    if (this.inViewport(scrollX)) {\n      this.context.drawImage(this.sprite, scrollX + this.x, this.y, this.width, this.height)\n    }\n  }\n}","import { Model } from './model'\nimport spriteImage from '../img/brick.png'\n\nexport class Brick extends Model {\n  constructor(game, options) {\n    super(game, options)\n    const sprite = new Image()\n    sprite.src = spriteImage\n    this.sprite = sprite\n  }\n}\n","import { Model } from './model'\n\nexport class Door extends Model {\n  constructor(game, options) {\n    super(game, options)\n  }\n\n  draw(scrollX) {\n    if (this.inViewport(scrollX)) {\n      this.context.fillStyle = 'black'\n      this.context.fillRect(scrollX + this.x, this.y, this.width, this.height)\n    }\n  }\n}","import { Model } from './model'\n\nexport class Flag extends Model {\n  constructor(game, options) {\n    const { world } = game\n    super(game, options)\n    this.world = world\n    this.width = world.unitLength * 0.25\n  }\n\n  draw(scrollX) {\n    if (this.inViewport(scrollX)) {\n      this.context.fillStyle = 'white'\n      this.context.fillRect(scrollX + this.x + (this.world.unitLength * 0.375), this.y, this.width, this.height)\n    }\n  }\n}","import { Model } from './model'\nimport spriteImage from '../img/ground.png'\n\nexport class Ground extends Model {\n  constructor(game, options) {\n    super(game, options)\n    const sprite = new Image()\n    sprite.src = spriteImage\n    this.sprite = sprite\n  }\n}\n","import { Model } from './model'\n\nexport class Pipe extends Model {\n  constructor(game, options) {\n    super(game, options)\n  }\n\n  draw(scrollX) {\n    if (this.inViewport(scrollX)) {\n      this.context.fillStyle = 'green'\n      this.context.fillRect(scrollX + this.x, this.y, this.width, this.height)\n    }\n  }\n}","import { Model } from './model'\nimport spriteImage from '../img/random.png'\n\nexport class Random extends Model {\n  constructor(game, options) {\n    super(game, options)\n    const sprite = new Image()\n    sprite.src = spriteImage\n    this.sprite = sprite\n  }\n}\n","export { Block } from './block'\nexport { Brick } from './brick'\nexport { Door } from './door'\nexport { Flag } from './flag'\nexport { Ground } from './ground'\nexport { Pipe } from './pipe'\nexport { Random } from './random'","import { Block, Brick, Door, Flag, Ground, Random, Pipe } from '../models'\n\nexport const firstWorld = {\n  background: '#6496f5',\n  squares: [\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Random, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Brick, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Random, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, Random, null, null, null, Brick, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Random, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Brick, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, Pipe, Pipe, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, Pipe, Pipe, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, Pipe, Pipe, Pipe, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, Pipe, Pipe, Pipe, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Pipe, Pipe, Pipe, Pipe, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Pipe, Pipe, Pipe, Pipe, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Pipe, Pipe, Pipe, Pipe, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Pipe, Pipe, Pipe, Pipe, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, Random, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Brick, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Random, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Brick, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, Brick, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, Brick, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, Brick, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, Brick, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, Brick, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, Brick, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, Brick, null, null, null, null, null, null, null, null, null\n    ],\n    [\n      null, null, null, null, null, null, Brick, null, null, null, null, null, null, null, null, null\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, Brick, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, Brick, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, Brick, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, Random, null, null, null, Brick, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Brick, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Brick, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Random, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, Random, null, null, null, Random, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Random, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Brick, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, Brick, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, Brick, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, Brick, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, Brick, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, Random, null, null, null, Brick, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, Random, null, null, null, Brick, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, Brick, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, Ground, Ground, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Ground, Ground, Ground, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Ground, Ground, Ground, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, Ground, Ground, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, Ground, Ground, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Ground, Ground, Ground, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Ground, Ground, Ground, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Ground, Ground, Ground, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, Ground, Ground, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, Pipe, Pipe, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, Pipe, Pipe, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Brick, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Brick, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Brick, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Brick, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, Pipe, Pipe, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, Pipe, Pipe, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, Ground, Ground, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Ground, Ground, Ground, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, Ground, Ground, Ground, Ground, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, Ground, Ground, Ground, Ground, Ground, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, Ground, Ground, Ground, Ground, Ground, Ground, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, Ground, Ground, Ground, Ground, Ground, Ground, Ground, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, Ground, Ground, Ground, Ground, Ground, Ground, Ground, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, Flag, Flag, Flag, Flag, Flag, Flag, Flag, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Ground, Ground, Ground, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, Ground, Ground, Ground, Ground, Ground, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, Ground, Ground, Ground, Ground, Door, Door, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, Ground, Ground, Ground, Ground, Ground, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, Ground, Ground, Ground, Ground, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ],\n    [\n      null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n    ]\n  ]\n}\n\nconst columnWithGround = [\n  null, null, null, null, null, null, null, null, null, null, null, null, null, null, Ground, Ground\n]\n\nconst columnWithPlatform = [\n  null, null, null, null, null, null, null, null, null, null, Ground, null, null, null, Ground, Ground\n]","import { firstWorld } from './worlds'\n\nexport class World {\n  constructor(game) {\n    const { canvas, context } = game\n    this.game = game\n    this.canvas = canvas\n    this.context = context\n    const unitLength = canvas.height / 16\n    this.unitLength = unitLength\n    this.groundHeight = canvas.height - (unitLength * 2)\n    this.blocks = []\n  }\n\n  createWorld(world) {\n    world.squares.map((column, columnIndex) =>\n      column.map((block, rowIndex) => {\n        if (!block) return\n        this.blocks.push(new block(this.game, {\n          x: columnIndex * this.unitLength,\n          y: rowIndex * this.unitLength,\n          width: this.unitLength,\n          height: this.unitLength\n        }))\n      })\n    )\n  }\n\n  init() {\n    this.createWorld(firstWorld)\n  }\n\n  draw(scrollX) {\n    this.context.fillStyle = firstWorld.background || '#6496f5'\n    this.context.fillRect(0, 0, this.canvas.width, this.canvas.height)\n    this.context.restore()\n    this.blocks.forEach(block => block.draw(scrollX))\n  }\n}\n","import { DynamicEntity } from './physics'\nimport stationaryImage from './img/mario-stationary.png'\nimport jumpingImage from './img/mario-jumping.png'\n\nexport class Player extends DynamicEntity {\n  constructor(game, options) {\n    const { context, world } = game\n    const { x, y, width, height, vx, vy, ax, ay } = options\n    super({\n      x: x || 0,\n      y: y || 0,\n      width: width || world.unitLength * 0.8,\n      height: height || world.unitLength * 1,\n      vx: vx || 0,\n      vy: vy || 0,\n      ax: ax || 0,\n      ay: ay\n    })\n    this.game = game\n    this.world = world\n    this.context = context\n    this.sprites = {}\n    this.sprites.stationary = new Image()\n    this.sprites.stationary.src = stationaryImage\n    this.sprites.jumping = new Image()\n    this.sprites.jumping.src = jumpingImage\n  }\n\n  draw(scrollX) {\n    if (!this.touchingTheGround) {\n      return this.context.drawImage(this.sprites.jumping, scrollX + this.x, this.y, this.width, this.height)\n    }\n    this.context.drawImage(this.sprites.stationary, scrollX + this.x, this.y, this.width, this.height)\n    this.context.restore()\n  }\n\n  startMoving(direction) {\n    const speed = this.world.unitLength / 10\n    if (direction === 'left') return (this.vx = speed * -1)\n    if (direction === 'right') return (this.vx = speed)\n  }\n\n  stopMoving() {\n    this.vx = 0\n  }\n\n  jump() {\n    if (this.touchingTheGround) return (this.vy = -this.world.unitLength / 3)\n  }\n}\n","import { World } from './world'\nimport { Player } from './player'\nimport { moveEntities, detectCollisions, resolveCollisions } from './physics'\n\nexport class Game {\n  constructor(canvas) {\n    this.options = {\n      debug: false\n    }\n    this.canvas = canvas\n    this.context = canvas.getContext('2d')\n    this.entities = []\n    this.scrollX = 0\n    this.debug = {\n      draw: scrollX => {\n        this.context.restore()\n        const stats = [\n          `Player`,\n          `x: ${ Math.floor(this.player.x) }`,\n          `y: ${ Math.floor(this.player.y) }`,\n          `y: ${ Math.floor(this.player.y) }`,\n          `vx: ${ Math.floor(this.player.vx) }`,\n          `vy: ${ Math.floor(this.player.vy) }`,\n          `ax ${ this.player.ax }`,\n          `ay ${ this.player.ay }`,\n          `Game`,\n          `scrollX: ${ Math.floor(scrollX) }`,\n          `inViewport: ${ this.canvas.width - scrollX }`\n        ]\n        stats.forEach((string, index) => this.context.fillText(string, 10, (index + 1) * 12))\n      }\n    }\n  }\n\n  init() {\n    this.canvas.width = window.innerWidth\n    this.canvas.height = window.innerHeight\n\n    this.world = new World(this)\n    this.world.init()\n\n    this.player = new Player(this, {\n      x: this.world.unitLength * 0.1,\n      y: this.world.groundHeight - this.world.unitLength * 1,\n      ay: 0\n    })\n    this.world.player = this.player\n\n    this.entities.push(this.player)\n    this.world.blocks.forEach(block => this.entities.push(block))\n    this.addEventListeners()\n    this.animate()\n  }\n\n  addEventListeners() {\n    window.addEventListener('keydown', event => {\n      if (event.key === 'ArrowRight') {\n        this.player.startMoving('right')\n      }\n      if (event.key === 'ArrowLeft') {\n        this.player.startMoving('left')\n      }\n      if (event.code === 'Space') {\n        this.player.jump()\n      }\n      if (this.options.debug) {\n        if (event.key === 'c') {\n          console.log(detectCollisions([this.player], this.world.blocks))\n        }\n        if (event.key === 'p') {\n          console.log(this.player)\n        }\n      }\n    })\n\n    window.addEventListener('keyup', event => {\n      if (event.key === 'ArrowRight') {\n        this.player.stopMoving()\n      }\n      if (event.key === 'ArrowLeft') {\n        this.player.stopMoving()\n      }\n    })\n  }\n\n  handlePhysics() {\n    moveEntities([this.player])\n    const collisions = detectCollisions([this.player], this.world.blocks)\n    resolveCollisions(collisions)\n  }\n\n  draw(scrollX) {\n    this.context.save()\n    this.context.beginPath()\n    this.world.draw(scrollX)\n    this.player.draw(scrollX)\n    if (this.options.debug) this.debug.draw(scrollX)\n  }\n\n  resetCanvas() {\n    this.context.fillStyle = 'white'\n    this.context.fillRect(0, 0, this.canvas.width, this.canvas.height)\n  }\n\n  scrollCanvas() {\n    if (this.player.x > (this.canvas.width * 0.8) - this.scrollX) {\n      this.scrollX -= 10\n    }\n    if (this.player.x < (this.canvas.width * 0.2) - this.scrollX) {\n      if (this.scrollX < -10) {\n        this.scrollX += 10\n      }\n    }\n  }\n\n  animate() {\n    requestAnimationFrame(() => this.animate())\n    this.update()\n  }\n\n  update() {\n    this.handlePhysics()\n    this.resetCanvas()\n    this.scrollCanvas(this.player.vx)\n    this.draw(this.scrollX)\n  }\n}\n","import { Game } from './game'\n\nconst main = () => {\n  window.game = new Game(document.querySelector('#game'))\n  game.init()\n}\n\ndocument.addEventListener('DOMContentLoaded', main)"]}